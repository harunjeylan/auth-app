{"version":3,"sources":["../../../src/auth/google-auth/google-auth.service.ts"],"sourcesContent":["import { BadRequestException, Inject, Injectable } from '@nestjs/common';\nimport { AuthorizationCode } from 'simple-oauth2';\nimport { AbstractOAuthService } from '../interfaces/auth.type';\nimport { googleAuthConstants } from './google-auth.constant';\nimport { GOOGLE_OAUTH20 } from './google-auth.module';\nimport { GoogleUser } from './google-auth.type';\n\n@Injectable()\nexport class GoogleAuthService implements AbstractOAuthService {\n  constructor(\n    @Inject(GOOGLE_OAUTH20)\n    readonly authClient: AuthorizationCode,\n  ) {}\n\n  async getAuthUrl() {\n    const authorizationUri = this.authClient.authorizeURL({\n      redirect_uri: googleAuthConstants.redirectURI,\n      scope: googleAuthConstants.scopes,\n    });\n    return authorizationUri;\n  }\n\n  async validateUser(code: string): Promise<GoogleUser | null> {\n    if (!code) {\n      throw new BadRequestException('Code is not provided');\n    }\n\n    const response = await this.authClient.getToken({\n      redirect_uri: googleAuthConstants.redirectURI,\n      scope: googleAuthConstants.scopes,\n      code: code,\n    });\n\n    const { access_token } = response.token as { access_token: string };\n\n    const res = await fetch(googleAuthConstants.profileURL, {\n      headers: {\n        Authorization: `Bearer ${access_token}`,\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!res.ok) {\n      console.log(res.statusText);\n      return null;\n    }\n\n    const user = await res.json();\n\n    return user as GoogleUser;\n  }\n}\n"],"names":["GoogleAuthService","getAuthUrl","authorizationUri","authClient","authorizeURL","redirect_uri","googleAuthConstants","redirectURI","scope","scopes","validateUser","code","BadRequestException","response","getToken","access_token","token","res","fetch","profileURL","headers","Authorization","ok","console","log","statusText","user","json","constructor","Injectable","Inject","GOOGLE_OAUTH20"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAQaA;;;eAAAA;;;wBAR2C;8BACtB;oCAEE;kCACL;;;;;;;;;;;;;;;AAIxB,IAAA,AAAMA,oBAAN,MAAMA;IAMX,MAAMC,aAAa;QACjB,MAAMC,mBAAmB,IAAI,CAACC,UAAU,CAACC,YAAY,CAAC;YACpDC,cAAcC,uCAAmB,CAACC,WAAW;YAC7CC,OAAOF,uCAAmB,CAACG,MAAM;QACnC;QACA,OAAOP;IACT;IAEA,MAAMQ,aAAaC,IAAY,EAA8B;QAC3D,IAAI,CAACA,MAAM;YACT,MAAM,IAAIC,2BAAmB,CAAC;QAChC;QAEA,MAAMC,WAAW,MAAM,IAAI,CAACV,UAAU,CAACW,QAAQ,CAAC;YAC9CT,cAAcC,uCAAmB,CAACC,WAAW;YAC7CC,OAAOF,uCAAmB,CAACG,MAAM;YACjCE,MAAMA;QACR;QAEA,MAAM,EAAEI,YAAY,EAAE,GAAGF,SAASG,KAAK;QAEvC,MAAMC,MAAM,MAAMC,MAAMZ,uCAAmB,CAACa,UAAU,EAAE;YACtDC,SAAS;gBACPC,eAAe,CAAC,OAAO,EAAEN,aAAa,CAAC;gBACvC,gBAAgB;YAClB;QACF;QAEA,IAAI,CAACE,IAAIK,EAAE,EAAE;YACXC,QAAQC,GAAG,CAACP,IAAIQ,UAAU;YAC1B,OAAO;QACT;QAEA,MAAMC,OAAO,MAAMT,IAAIU,IAAI;QAE3B,OAAOD;IACT;IAzCAE,YACE,AACSzB,UAA6B,CACtC;aADSA,aAAAA;IACR;AAuCL;AA3CaH;IADZ6B,IAAAA,kBAAU;IAGNC,aAAAA,IAAAA,cAAM,EAACC,gCAAc;;;eACD,+BAAiB,4BAAjB,+BAAiB;;GAH7B/B"}